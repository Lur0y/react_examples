/*
    Up to this point, I've used useState and useEffect a lot, but I didn't really know what they were: hooks.

    In React, a Hook is simply a JavaScript function that starts with "use" and follows camelCase naming.

    You can use useState and other React hooks inside a custom hook

    Hooks are designed to simplify logic and manage interactive variables, just like useState and useEffect.

    Here is an example generated by improving TraineeApiFetchingTest
*/

import { Box, Button, Typography } from "@mui/material";
import useCatImage from  "@/hooks/useCatImage";
import useCatFact from "@/hooks/useCatFact";

export default function CustomHooks() {

    const {fact, refreshCatRandomFact} = useCatFact();
    const {img} = useCatImage({fact});
    
    function handleClick(){

        refreshCatRandomFact();

    }

    return (
        <Box
            sx={{
                display: "flex",
                alignItems: "center",
                justifyContent: "space-around",
                width: '100vw',
                height: "100vh",
                maxWidth: '100%',
                maxHeight: '100%',
                flexDirection: 'column'
            }}
        >
            <Button onClick={handleClick} variant="contained">
                Click here to display image
            </Button>
            {
                img &&
                <Box
                    sx={{
                        display: 'flex',
                        alignItems: 'center',
                        justifyContent: 'center',
                        gap: '20px',
                    }}
                >
                    <Typography variant="body1" component="p" width='30%'>
                        {fact}
                    </Typography>
                    <Box
                        sx={{
                            width: 'auto',
                            height: '70vh'
                        }}
                    >
                        <img src={img} alt="Cat Img!" style={{width: '100%', height: '100%'}} />
                    </Box>
                </Box>
            }
        </Box>
    );
}